:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the BakedLightmap.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_BakedLightmap:

BakedLightmap
=============

**Inherits:** :ref:`VisualInstance<class_VisualInstance>` **<** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Category:** Core

Brief Description
-----------------

Prerendered indirect light map for a scene.

Properties
----------

+----------------------------------------------------+------------------------------------------------------------------------------------------------+-----------------------+
| :ref:`float<class_float>`                          | :ref:`bake_cell_size<class_BakedLightmap_property_bake_cell_size>`                             | 0.25                  |
+----------------------------------------------------+------------------------------------------------------------------------------------------------+-----------------------+
| :ref:`float<class_float>`                          | :ref:`bake_default_texels_per_unit<class_BakedLightmap_property_bake_default_texels_per_unit>` | 20.0                  |
+----------------------------------------------------+------------------------------------------------------------------------------------------------+-----------------------+
| :ref:`float<class_float>`                          | :ref:`bake_energy<class_BakedLightmap_property_bake_energy>`                                   | 1.0                   |
+----------------------------------------------------+------------------------------------------------------------------------------------------------+-----------------------+
| :ref:`Vector3<class_Vector3>`                      | :ref:`bake_extents<class_BakedLightmap_property_bake_extents>`                                 | Vector3( 10, 10, 10 ) |
+----------------------------------------------------+------------------------------------------------------------------------------------------------+-----------------------+
| :ref:`bool<class_bool>`                            | :ref:`bake_hdr<class_BakedLightmap_property_bake_hdr>`                                         | false                 |
+----------------------------------------------------+------------------------------------------------------------------------------------------------+-----------------------+
| :ref:`BakeMode<enum_BakedLightmap_BakeMode>`       | :ref:`bake_mode<class_BakedLightmap_property_bake_mode>`                                       | 0                     |
+----------------------------------------------------+------------------------------------------------------------------------------------------------+-----------------------+
| :ref:`float<class_float>`                          | :ref:`bake_propagation<class_BakedLightmap_property_bake_propagation>`                         | 1.0                   |
+----------------------------------------------------+------------------------------------------------------------------------------------------------+-----------------------+
| :ref:`BakeQuality<enum_BakedLightmap_BakeQuality>` | :ref:`bake_quality<class_BakedLightmap_property_bake_quality>`                                 | 1                     |
+----------------------------------------------------+------------------------------------------------------------------------------------------------+-----------------------+
| :ref:`float<class_float>`                          | :ref:`capture_cell_size<class_BakedLightmap_property_capture_cell_size>`                       | 0.5                   |
+----------------------------------------------------+------------------------------------------------------------------------------------------------+-----------------------+
| :ref:`String<class_String>`                        | :ref:`image_path<class_BakedLightmap_property_image_path>`                                     | "."                   |
+----------------------------------------------------+------------------------------------------------------------------------------------------------+-----------------------+
| :ref:`BakedLightmapData<class_BakedLightmapData>`  | :ref:`light_data<class_BakedLightmap_property_light_data>`                                     |                       |
+----------------------------------------------------+------------------------------------------------------------------------------------------------+-----------------------+

Methods
-------

+------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`BakeError<enum_BakedLightmap_BakeError>` | :ref:`bake<class_BakedLightmap_method_bake>` **(** :ref:`Node<class_Node>` from_node=null, :ref:`bool<class_bool>` create_visual_debug=false **)** |
+------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                           | :ref:`debug_bake<class_BakedLightmap_method_debug_bake>` **(** **)**                                                                               |
+------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_BakedLightmap_BakeQuality:

.. _class_BakedLightmap_constant_BAKE_QUALITY_LOW:

.. _class_BakedLightmap_constant_BAKE_QUALITY_MEDIUM:

.. _class_BakedLightmap_constant_BAKE_QUALITY_HIGH:

enum **BakeQuality**:

- **BAKE_QUALITY_LOW** = **0** --- The lowest bake quality mode. Fastest to calculate.

- **BAKE_QUALITY_MEDIUM** = **1** --- The default bake quality mode.

- **BAKE_QUALITY_HIGH** = **2** --- The highest bake quality mode. Takes longer to calculate.

.. _enum_BakedLightmap_BakeMode:

.. _class_BakedLightmap_constant_BAKE_MODE_CONE_TRACE:

.. _class_BakedLightmap_constant_BAKE_MODE_RAY_TRACE:

enum **BakeMode**:

- **BAKE_MODE_CONE_TRACE** = **0** --- Less precise but faster bake mode.

- **BAKE_MODE_RAY_TRACE** = **1** --- More precise bake mode but can take considerably longer to bake.

.. _enum_BakedLightmap_BakeError:

.. _class_BakedLightmap_constant_BAKE_ERROR_OK:

.. _class_BakedLightmap_constant_BAKE_ERROR_NO_SAVE_PATH:

.. _class_BakedLightmap_constant_BAKE_ERROR_NO_MESHES:

.. _class_BakedLightmap_constant_BAKE_ERROR_CANT_CREATE_IMAGE:

.. _class_BakedLightmap_constant_BAKE_ERROR_USER_ABORTED:

enum **BakeError**:

- **BAKE_ERROR_OK** = **0**

- **BAKE_ERROR_NO_SAVE_PATH** = **1**

- **BAKE_ERROR_NO_MESHES** = **2**

- **BAKE_ERROR_CANT_CREATE_IMAGE** = **3**

- **BAKE_ERROR_USER_ABORTED** = **4**

Description
-----------

Baked lightmaps are an alternative workflow for adding indirect (or baked) lighting to a scene. Unlike the :ref:`GIProbe<class_GIProbe>` approach, baked lightmaps work fine on low-end PCs and mobile devices as they consume almost no resources in run-time.

Tutorials
---------

- :doc:`../tutorials/3d/baked_lightmaps`

Property Descriptions
---------------------

.. _class_BakedLightmap_property_bake_cell_size:

- :ref:`float<class_float>` **bake_cell_size**

+-----------+---------------------------+
| *Default* | 0.25                      |
+-----------+---------------------------+
| *Setter*  | set_bake_cell_size(value) |
+-----------+---------------------------+
| *Getter*  | get_bake_cell_size()      |
+-----------+---------------------------+

Grid subdivision size for lightmapper calculation. The default value will work for most cases. Increase for better lighting on small details or if your scene is very large.

.. _class_BakedLightmap_property_bake_default_texels_per_unit:

- :ref:`float<class_float>` **bake_default_texels_per_unit**

+-----------+-----------------------------------------+
| *Default* | 20.0                                    |
+-----------+-----------------------------------------+
| *Setter*  | set_bake_default_texels_per_unit(value) |
+-----------+-----------------------------------------+
| *Getter*  | get_bake_default_texels_per_unit()      |
+-----------+-----------------------------------------+

If a :ref:`Mesh.lightmap_size_hint<class_Mesh_property_lightmap_size_hint>` isn't specified, the lightmap baker will dynamically set the lightmap size using this value. This value is measured in texels per world unit. The maximum lightmap texture size is 4096x4096.

.. _class_BakedLightmap_property_bake_energy:

- :ref:`float<class_float>` **bake_energy**

+-----------+-------------------+
| *Default* | 1.0               |
+-----------+-------------------+
| *Setter*  | set_energy(value) |
+-----------+-------------------+
| *Getter*  | get_energy()      |
+-----------+-------------------+

Multiplies the light sources' intensity by this value. For instance, if the value is set to 2, lights will be twice as bright. If the value is set to 0.5, lights will be half as bright.

.. _class_BakedLightmap_property_bake_extents:

- :ref:`Vector3<class_Vector3>` **bake_extents**

+-----------+-----------------------+
| *Default* | Vector3( 10, 10, 10 ) |
+-----------+-----------------------+
| *Setter*  | set_extents(value)    |
+-----------+-----------------------+
| *Getter*  | get_extents()         |
+-----------+-----------------------+

The size of the affected area.

.. _class_BakedLightmap_property_bake_hdr:

- :ref:`bool<class_bool>` **bake_hdr**

+-----------+----------------+
| *Default* | false          |
+-----------+----------------+
| *Setter*  | set_hdr(value) |
+-----------+----------------+
| *Getter*  | is_hdr()       |
+-----------+----------------+

If ``true``, the lightmap can capture light values greater than ``1.0``. Turning this off will result in a smaller file size.

.. _class_BakedLightmap_property_bake_mode:

- :ref:`BakeMode<enum_BakedLightmap_BakeMode>` **bake_mode**

+-----------+----------------------+
| *Default* | 0                    |
+-----------+----------------------+
| *Setter*  | set_bake_mode(value) |
+-----------+----------------------+
| *Getter*  | get_bake_mode()      |
+-----------+----------------------+

Lightmapping mode. See :ref:`BakeMode<enum_BakedLightmap_BakeMode>`.

.. _class_BakedLightmap_property_bake_propagation:

- :ref:`float<class_float>` **bake_propagation**

+-----------+------------------------+
| *Default* | 1.0                    |
+-----------+------------------------+
| *Setter*  | set_propagation(value) |
+-----------+------------------------+
| *Getter*  | get_propagation()      |
+-----------+------------------------+

Defines how far the light will travel before it is no longer effective. The higher the number, the farther the light will travel. For instance, if the value is set to 2, the light will go twice as far. If the value is set to 0.5, the light will only go half as far.

.. _class_BakedLightmap_property_bake_quality:

- :ref:`BakeQuality<enum_BakedLightmap_BakeQuality>` **bake_quality**

+-----------+-------------------------+
| *Default* | 1                       |
+-----------+-------------------------+
| *Setter*  | set_bake_quality(value) |
+-----------+-------------------------+
| *Getter*  | get_bake_quality()      |
+-----------+-------------------------+

Three quality modes are available. Higher quality requires more rendering time. See :ref:`BakeQuality<enum_BakedLightmap_BakeQuality>`.

.. _class_BakedLightmap_property_capture_cell_size:

- :ref:`float<class_float>` **capture_cell_size**

+-----------+------------------------------+
| *Default* | 0.5                          |
+-----------+------------------------------+
| *Setter*  | set_capture_cell_size(value) |
+-----------+------------------------------+
| *Getter*  | get_capture_cell_size()      |
+-----------+------------------------------+

Grid size used for real-time capture information on dynamic objects. Cannot be larger than :ref:`bake_cell_size<class_BakedLightmap_property_bake_cell_size>`.

.. _class_BakedLightmap_property_image_path:

- :ref:`String<class_String>` **image_path**

+-----------+-----------------------+
| *Default* | "."                   |
+-----------+-----------------------+
| *Setter*  | set_image_path(value) |
+-----------+-----------------------+
| *Getter*  | get_image_path()      |
+-----------+-----------------------+

The location where lightmaps will be saved.

.. _class_BakedLightmap_property_light_data:

- :ref:`BakedLightmapData<class_BakedLightmapData>` **light_data**

+----------+-----------------------+
| *Setter* | set_light_data(value) |
+----------+-----------------------+
| *Getter* | get_light_data()      |
+----------+-----------------------+

The calculated light data.

Method Descriptions
-------------------

.. _class_BakedLightmap_method_bake:

- :ref:`BakeError<enum_BakedLightmap_BakeError>` **bake** **(** :ref:`Node<class_Node>` from_node=null, :ref:`bool<class_bool>` create_visual_debug=false **)**

Bakes the lightmaps within the currently edited scene.

.. _class_BakedLightmap_method_debug_bake:

- void **debug_bake** **(** **)**

Executes a dry run bake of lightmaps within the currently edited scene.

