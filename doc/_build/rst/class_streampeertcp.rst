:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the StreamPeerTCP.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_StreamPeerTCP:

StreamPeerTCP
=============

**Inherits:** :ref:`StreamPeer<class_StreamPeer>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

**Category:** Core

Brief Description
-----------------

TCP stream peer.

Methods
-------

+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`    | :ref:`connect_to_host<class_StreamPeerTCP_method_connect_to_host>` **(** :ref:`String<class_String>` host, :ref:`int<class_int>` port **)** |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------+
| void                                     | :ref:`disconnect_from_host<class_StreamPeerTCP_method_disconnect_from_host>` **(** **)**                                                    |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`              | :ref:`get_connected_host<class_StreamPeerTCP_method_get_connected_host>` **(** **)** const                                                  |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                    | :ref:`get_connected_port<class_StreamPeerTCP_method_get_connected_port>` **(** **)** const                                                  |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Status<enum_StreamPeerTCP_Status>` | :ref:`get_status<class_StreamPeerTCP_method_get_status>` **(** **)**                                                                        |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                  | :ref:`is_connected_to_host<class_StreamPeerTCP_method_is_connected_to_host>` **(** **)** const                                              |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------+
| void                                     | :ref:`set_no_delay<class_StreamPeerTCP_method_set_no_delay>` **(** :ref:`bool<class_bool>` enabled **)**                                    |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_StreamPeerTCP_Status:

.. _class_StreamPeerTCP_constant_STATUS_NONE:

.. _class_StreamPeerTCP_constant_STATUS_CONNECTING:

.. _class_StreamPeerTCP_constant_STATUS_CONNECTED:

.. _class_StreamPeerTCP_constant_STATUS_ERROR:

enum **Status**:

- **STATUS_NONE** = **0** --- The initial status of the ``StreamPeerTCP``. This is also the status after disconnecting.

- **STATUS_CONNECTING** = **1** --- A status representing a ``StreamPeerTCP`` that is connecting to a host.

- **STATUS_CONNECTED** = **2** --- A status representing a ``StreamPeerTCP`` that is connected to a host.

- **STATUS_ERROR** = **3** --- A status representing a ``StreamPeerTCP`` in error state.

Description
-----------

TCP stream peer. This object can be used to connect to TCP servers, or also is returned by a TCP server.

Method Descriptions
-------------------

.. _class_StreamPeerTCP_method_connect_to_host:

- :ref:`Error<enum_@GlobalScope_Error>` **connect_to_host** **(** :ref:`String<class_String>` host, :ref:`int<class_int>` port **)**

Connects to the specified ``host:port`` pair. A hostname will be resolved if valid. Returns :ref:`@GlobalScope.OK<class_@GlobalScope_constant_OK>` on success or :ref:`@GlobalScope.FAILED<class_@GlobalScope_constant_FAILED>` on failure.

.. _class_StreamPeerTCP_method_disconnect_from_host:

- void **disconnect_from_host** **(** **)**

Disconnects from host.

.. _class_StreamPeerTCP_method_get_connected_host:

- :ref:`String<class_String>` **get_connected_host** **(** **)** const

Returns the IP of this peer.

.. _class_StreamPeerTCP_method_get_connected_port:

- :ref:`int<class_int>` **get_connected_port** **(** **)** const

Returns the port of this peer.

.. _class_StreamPeerTCP_method_get_status:

- :ref:`Status<enum_StreamPeerTCP_Status>` **get_status** **(** **)**

Returns the status of the connection, see :ref:`Status<enum_StreamPeerTCP_Status>`.

.. _class_StreamPeerTCP_method_is_connected_to_host:

- :ref:`bool<class_bool>` **is_connected_to_host** **(** **)** const

Returns ``true`` if this peer is currently connected to a host, ``false`` otherwise.

.. _class_StreamPeerTCP_method_set_no_delay:

- void **set_no_delay** **(** :ref:`bool<class_bool>` enabled **)**

Disables Nagle's algorithm to improve latency for small packets.

**Note:** For applications that send large packets or need to transfer a lot of data, this can decrease the total available bandwidth.

