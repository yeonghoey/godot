:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the ScrollContainer.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ScrollContainer:

ScrollContainer
===============

**Inherits:** :ref:`Container<class_Container>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`EditorInspector<class_EditorInspector>`

**Category:** Core

Brief Description
-----------------

A helper node for displaying scrollable elements such as lists.

Properties
----------

+-------------------------+--------------------------------------------------------------------------------------------+-------------+
| :ref:`bool<class_bool>` | rect_clip_content                                                                          | **O:** true |
+-------------------------+--------------------------------------------------------------------------------------------+-------------+
| :ref:`int<class_int>`   | :ref:`scroll_deadzone<class_ScrollContainer_property_scroll_deadzone>`                     | 0           |
+-------------------------+--------------------------------------------------------------------------------------------+-------------+
| :ref:`int<class_int>`   | :ref:`scroll_horizontal<class_ScrollContainer_property_scroll_horizontal>`                 | 0           |
+-------------------------+--------------------------------------------------------------------------------------------+-------------+
| :ref:`bool<class_bool>` | :ref:`scroll_horizontal_enabled<class_ScrollContainer_property_scroll_horizontal_enabled>` | true        |
+-------------------------+--------------------------------------------------------------------------------------------+-------------+
| :ref:`int<class_int>`   | :ref:`scroll_vertical<class_ScrollContainer_property_scroll_vertical>`                     | 0           |
+-------------------------+--------------------------------------------------------------------------------------------+-------------+
| :ref:`bool<class_bool>` | :ref:`scroll_vertical_enabled<class_ScrollContainer_property_scroll_vertical_enabled>`     | true        |
+-------------------------+--------------------------------------------------------------------------------------------+-------------+

Methods
-------

+-------------------------------------+----------------------------------------------------------------------------------+
| :ref:`HScrollBar<class_HScrollBar>` | :ref:`get_h_scrollbar<class_ScrollContainer_method_get_h_scrollbar>` **(** **)** |
+-------------------------------------+----------------------------------------------------------------------------------+
| :ref:`VScrollBar<class_VScrollBar>` | :ref:`get_v_scrollbar<class_ScrollContainer_method_get_v_scrollbar>` **(** **)** |
+-------------------------------------+----------------------------------------------------------------------------------+

Theme Properties
----------------

+---------------------------------+----+
| :ref:`StyleBox<class_StyleBox>` | bg |
+---------------------------------+----+

Signals
-------

.. _class_ScrollContainer_signal_scroll_ended:

- **scroll_ended** **(** **)**

Emitted when scrolling stops.

.. _class_ScrollContainer_signal_scroll_started:

- **scroll_started** **(** **)**

Emitted when scrolling is started.

Description
-----------

A ScrollContainer node meant to contain a :ref:`Control<class_Control>` child. ScrollContainers will automatically create a scrollbar child (:ref:`HScrollBar<class_HScrollBar>`, :ref:`VScrollBar<class_VScrollBar>`, or both) when needed and will only draw the Control within the ScrollContainer area. Scrollbars will automatically be drawn at the right (for vertical) or bottom (for horizontal) and will enable dragging to move the viewable Control (and its children) within the ScrollContainer. Scrollbars will also automatically resize the grabber based on the :ref:`Control.rect_min_size<class_Control_property_rect_min_size>` of the Control relative to the ScrollContainer. Works great with a :ref:`Panel<class_Panel>` control. You can set ``EXPAND`` on the children's size flags, so they will upscale to the ScrollContainer's size if it's larger (scroll is invisible for the chosen dimension).

Property Descriptions
---------------------

.. _class_ScrollContainer_property_scroll_deadzone:

- :ref:`int<class_int>` **scroll_deadzone**

+-----------+---------------------+
| *Default* | 0                   |
+-----------+---------------------+
| *Setter*  | set_deadzone(value) |
+-----------+---------------------+
| *Getter*  | get_deadzone()      |
+-----------+---------------------+

.. _class_ScrollContainer_property_scroll_horizontal:

- :ref:`int<class_int>` **scroll_horizontal**

+-----------+---------------------+
| *Default* | 0                   |
+-----------+---------------------+
| *Setter*  | set_h_scroll(value) |
+-----------+---------------------+
| *Getter*  | get_h_scroll()      |
+-----------+---------------------+

The current horizontal scroll value.

.. _class_ScrollContainer_property_scroll_horizontal_enabled:

- :ref:`bool<class_bool>` **scroll_horizontal_enabled**

+-----------+----------------------------+
| *Default* | true                       |
+-----------+----------------------------+
| *Setter*  | set_enable_h_scroll(value) |
+-----------+----------------------------+
| *Getter*  | is_h_scroll_enabled()      |
+-----------+----------------------------+

If ``true``, enables horizontal scrolling.

.. _class_ScrollContainer_property_scroll_vertical:

- :ref:`int<class_int>` **scroll_vertical**

+-----------+---------------------+
| *Default* | 0                   |
+-----------+---------------------+
| *Setter*  | set_v_scroll(value) |
+-----------+---------------------+
| *Getter*  | get_v_scroll()      |
+-----------+---------------------+

The current vertical scroll value.

.. _class_ScrollContainer_property_scroll_vertical_enabled:

- :ref:`bool<class_bool>` **scroll_vertical_enabled**

+-----------+----------------------------+
| *Default* | true                       |
+-----------+----------------------------+
| *Setter*  | set_enable_v_scroll(value) |
+-----------+----------------------------+
| *Getter*  | is_v_scroll_enabled()      |
+-----------+----------------------------+

If ``true``, enables vertical scrolling.

Method Descriptions
-------------------

.. _class_ScrollContainer_method_get_h_scrollbar:

- :ref:`HScrollBar<class_HScrollBar>` **get_h_scrollbar** **(** **)**

.. _class_ScrollContainer_method_get_v_scrollbar:

- :ref:`VScrollBar<class_VScrollBar>` **get_v_scrollbar** **(** **)**

