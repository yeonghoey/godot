:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the SpinBox.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_SpinBox:

SpinBox
=======

**Inherits:** :ref:`Range<class_Range>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Category:** Core

Brief Description
-----------------

Numerical input text field.

Properties
----------

+-----------------------------------+--------------------------------------------------+------+
| :ref:`Align<enum_LineEdit_Align>` | :ref:`align<class_SpinBox_property_align>`       | 0    |
+-----------------------------------+--------------------------------------------------+------+
| :ref:`bool<class_bool>`           | :ref:`editable<class_SpinBox_property_editable>` | true |
+-----------------------------------+--------------------------------------------------+------+
| :ref:`String<class_String>`       | :ref:`prefix<class_SpinBox_property_prefix>`     | ""   |
+-----------------------------------+--------------------------------------------------+------+
| :ref:`String<class_String>`       | :ref:`suffix<class_SpinBox_property_suffix>`     | ""   |
+-----------------------------------+--------------------------------------------------+------+

Methods
-------

+---------------------------------+----------------------------------------------------------------------+
| :ref:`LineEdit<class_LineEdit>` | :ref:`get_line_edit<class_SpinBox_method_get_line_edit>` **(** **)** |
+---------------------------------+----------------------------------------------------------------------+

Theme Properties
----------------

+-------------------------------+--------+
| :ref:`Texture<class_Texture>` | updown |
+-------------------------------+--------+

Description
-----------

SpinBox is a numerical input text field. It allows entering integers and floats.

**Example:**

::

    var spin_box = SpinBox.new()
    add_child(spin_box)
    var line_edit = spin_box.get_line_edit()
    line_edit.context_menu_enabled = false
    spin_box.align = LineEdit.ALIGN_RIGHT

The above code will create a ``SpinBox``, disable context menu on it and set the text alignment to right.

See :ref:`Range<class_Range>` class for more options over the ``SpinBox``.

Property Descriptions
---------------------

.. _class_SpinBox_property_align:

- :ref:`Align<enum_LineEdit_Align>` **align**

+-----------+------------------+
| *Default* | 0                |
+-----------+------------------+
| *Setter*  | set_align(value) |
+-----------+------------------+
| *Getter*  | get_align()      |
+-----------+------------------+

Sets the text alignment of the ``SpinBox``.

.. _class_SpinBox_property_editable:

- :ref:`bool<class_bool>` **editable**

+-----------+---------------------+
| *Default* | true                |
+-----------+---------------------+
| *Setter*  | set_editable(value) |
+-----------+---------------------+
| *Getter*  | is_editable()       |
+-----------+---------------------+

If ``true``, the ``SpinBox`` will be editable. Otherwise, it will be read only.

.. _class_SpinBox_property_prefix:

- :ref:`String<class_String>` **prefix**

+-----------+-------------------+
| *Default* | ""                |
+-----------+-------------------+
| *Setter*  | set_prefix(value) |
+-----------+-------------------+
| *Getter*  | get_prefix()      |
+-----------+-------------------+

Adds the specified ``prefix`` string before the numerical value of the ``SpinBox``.

.. _class_SpinBox_property_suffix:

- :ref:`String<class_String>` **suffix**

+-----------+-------------------+
| *Default* | ""                |
+-----------+-------------------+
| *Setter*  | set_suffix(value) |
+-----------+-------------------+
| *Getter*  | get_suffix()      |
+-----------+-------------------+

Adds the specified ``prefix`` string after the numerical value of the ``SpinBox``.

Method Descriptions
-------------------

.. _class_SpinBox_method_get_line_edit:

- :ref:`LineEdit<class_LineEdit>` **get_line_edit** **(** **)**

Returns the :ref:`LineEdit<class_LineEdit>` instance from this ``SpinBox``. You can use it to access properties and methods of :ref:`LineEdit<class_LineEdit>`.

